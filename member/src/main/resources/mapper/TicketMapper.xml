<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.clone.member.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="org.clone.member.domain.Ticket">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="passenger_id" jdbcType="BIGINT" property="passengerId" />
    <result column="passenger_name" jdbcType="VARCHAR" property="passengerName" />
    <result column="train_date" jdbcType="DATE" property="trainDate" />
    <result column="train_code" jdbcType="VARCHAR" property="trainCode" />
    <result column="carriage_index" jdbcType="INTEGER" property="carriageIndex" />
    <result column="seat_row" jdbcType="CHAR" property="seatRow" />
    <result column="seat_col" jdbcType="CHAR" property="seatCol" />
    <result column="departure" jdbcType="VARCHAR" property="departure" />
    <result column="departure_time" jdbcType="TIME" property="departureTime" />
    <result column="destination" jdbcType="VARCHAR" property="destination" />
    <result column="arrival_time" jdbcType="TIME" property="arrivalTime" />
    <result column="seat_type" jdbcType="CHAR" property="seatType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, passenger_id, passenger_name, train_date, train_code, carriage_index, 
    seat_row, seat_col, departure, departure_time, destination, arrival_time, seat_type, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="org.clone.member.domain.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ticket
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.clone.member.domain.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.clone.member.domain.Ticket">
    insert into ticket (id, member_id, passenger_id, 
      passenger_name, train_date, train_code, 
      carriage_index, seat_row, seat_col, 
      departure, departure_time, destination, 
      arrival_time, seat_type, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{passengerId,jdbcType=BIGINT}, 
      #{passengerName,jdbcType=VARCHAR}, #{trainDate,jdbcType=DATE}, #{trainCode,jdbcType=VARCHAR}, 
      #{carriageIndex,jdbcType=INTEGER}, #{seatRow,jdbcType=CHAR}, #{seatCol,jdbcType=CHAR}, 
      #{departure,jdbcType=VARCHAR}, #{departureTime,jdbcType=TIME}, #{destination,jdbcType=VARCHAR}, 
      #{arrivalTime,jdbcType=TIME}, #{seatType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.clone.member.domain.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="passengerId != null">
        passenger_id,
      </if>
      <if test="passengerName != null">
        passenger_name,
      </if>
      <if test="trainDate != null">
        train_date,
      </if>
      <if test="trainCode != null">
        train_code,
      </if>
      <if test="carriageIndex != null">
        carriage_index,
      </if>
      <if test="seatRow != null">
        seat_row,
      </if>
      <if test="seatCol != null">
        seat_col,
      </if>
      <if test="departure != null">
        departure,
      </if>
      <if test="departureTime != null">
        departure_time,
      </if>
      <if test="destination != null">
        destination,
      </if>
      <if test="arrivalTime != null">
        arrival_time,
      </if>
      <if test="seatType != null">
        seat_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="passengerId != null">
        #{passengerId,jdbcType=BIGINT},
      </if>
      <if test="passengerName != null">
        #{passengerName,jdbcType=VARCHAR},
      </if>
      <if test="trainDate != null">
        #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainCode != null">
        #{trainCode,jdbcType=VARCHAR},
      </if>
      <if test="carriageIndex != null">
        #{carriageIndex,jdbcType=INTEGER},
      </if>
      <if test="seatRow != null">
        #{seatRow,jdbcType=CHAR},
      </if>
      <if test="seatCol != null">
        #{seatCol,jdbcType=CHAR},
      </if>
      <if test="departure != null">
        #{departure,jdbcType=VARCHAR},
      </if>
      <if test="departureTime != null">
        #{departureTime,jdbcType=TIME},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="arrivalTime != null">
        #{arrivalTime,jdbcType=TIME},
      </if>
      <if test="seatType != null">
        #{seatType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.clone.member.domain.TicketExample" resultType="java.lang.Long">
    select count(*) from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.passengerId != null">
        passenger_id = #{record.passengerId,jdbcType=BIGINT},
      </if>
      <if test="record.passengerName != null">
        passenger_name = #{record.passengerName,jdbcType=VARCHAR},
      </if>
      <if test="record.trainDate != null">
        train_date = #{record.trainDate,jdbcType=DATE},
      </if>
      <if test="record.trainCode != null">
        train_code = #{record.trainCode,jdbcType=VARCHAR},
      </if>
      <if test="record.carriageIndex != null">
        carriage_index = #{record.carriageIndex,jdbcType=INTEGER},
      </if>
      <if test="record.seatRow != null">
        seat_row = #{record.seatRow,jdbcType=CHAR},
      </if>
      <if test="record.seatCol != null">
        seat_col = #{record.seatCol,jdbcType=CHAR},
      </if>
      <if test="record.departure != null">
        departure = #{record.departure,jdbcType=VARCHAR},
      </if>
      <if test="record.departureTime != null">
        departure_time = #{record.departureTime,jdbcType=TIME},
      </if>
      <if test="record.destination != null">
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.arrivalTime != null">
        arrival_time = #{record.arrivalTime,jdbcType=TIME},
      </if>
      <if test="record.seatType != null">
        seat_type = #{record.seatType,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set id = #{record.id,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=BIGINT},
      passenger_id = #{record.passengerId,jdbcType=BIGINT},
      passenger_name = #{record.passengerName,jdbcType=VARCHAR},
      train_date = #{record.trainDate,jdbcType=DATE},
      train_code = #{record.trainCode,jdbcType=VARCHAR},
      carriage_index = #{record.carriageIndex,jdbcType=INTEGER},
      seat_row = #{record.seatRow,jdbcType=CHAR},
      seat_col = #{record.seatCol,jdbcType=CHAR},
      departure = #{record.departure,jdbcType=VARCHAR},
      departure_time = #{record.departureTime,jdbcType=TIME},
      destination = #{record.destination,jdbcType=VARCHAR},
      arrival_time = #{record.arrivalTime,jdbcType=TIME},
      seat_type = #{record.seatType,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.clone.member.domain.Ticket">
    update ticket
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="passengerId != null">
        passenger_id = #{passengerId,jdbcType=BIGINT},
      </if>
      <if test="passengerName != null">
        passenger_name = #{passengerName,jdbcType=VARCHAR},
      </if>
      <if test="trainDate != null">
        train_date = #{trainDate,jdbcType=DATE},
      </if>
      <if test="trainCode != null">
        train_code = #{trainCode,jdbcType=VARCHAR},
      </if>
      <if test="carriageIndex != null">
        carriage_index = #{carriageIndex,jdbcType=INTEGER},
      </if>
      <if test="seatRow != null">
        seat_row = #{seatRow,jdbcType=CHAR},
      </if>
      <if test="seatCol != null">
        seat_col = #{seatCol,jdbcType=CHAR},
      </if>
      <if test="departure != null">
        departure = #{departure,jdbcType=VARCHAR},
      </if>
      <if test="departureTime != null">
        departure_time = #{departureTime,jdbcType=TIME},
      </if>
      <if test="destination != null">
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="arrivalTime != null">
        arrival_time = #{arrivalTime,jdbcType=TIME},
      </if>
      <if test="seatType != null">
        seat_type = #{seatType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.clone.member.domain.Ticket">
    update ticket
    set member_id = #{memberId,jdbcType=BIGINT},
      passenger_id = #{passengerId,jdbcType=BIGINT},
      passenger_name = #{passengerName,jdbcType=VARCHAR},
      train_date = #{trainDate,jdbcType=DATE},
      train_code = #{trainCode,jdbcType=VARCHAR},
      carriage_index = #{carriageIndex,jdbcType=INTEGER},
      seat_row = #{seatRow,jdbcType=CHAR},
      seat_col = #{seatCol,jdbcType=CHAR},
      departure = #{departure,jdbcType=VARCHAR},
      departure_time = #{departureTime,jdbcType=TIME},
      destination = #{destination,jdbcType=VARCHAR},
      arrival_time = #{arrivalTime,jdbcType=TIME},
      seat_type = #{seatType,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>